swagger: "2.0"
info:
  title: Social network API
  description: Your API Description
  version: "1.0.0"
# host: localhost:3000
# basePath: /
schemes:
  - https
paths:
  /events:
    get:
      tags:
        - Events
      summary: Get events
      description: Returns all events or an event with related users.
      parameters:
        - name: eventId
          in: query
          description: ID of the event to retrieve.
          required: false
          type: integer
        - name: include_organizer
          in: query
          description: Include the organizer in the response.
          required: false
          type: boolean
        - name: include_candidates
          in: query
          description: Include the candidates in the response.
          required: false
          type: boolean
        - name: include_participants
          in: query
          description: Include the participants in the response.
          required: false
          type: boolean
        - name: include_notes
          in: query
          description: Include the notes in the response.
          required: false
          type: boolean
        - name: include_messages
          in: query
          description: Include the messages in the response.
          required: false
          type: boolean
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              code:
                type: integer
              message:
                type: string
              events:
                type: array
                items:
                  type: object
                  properties:
                    event_id:
                      type: integer
                    event_name:
                      type: string
                    organizer:
                      type: object
                      properties:
                        organizer_id:
                          type: integer
                        organizer_name:
                          type: string
                    candidates:
                      type: array
                      items:
                        type: object
                        properties:
                          candidate_id:
                            type: integer
                          candidate_name:
                            type: string
                    participants:
                      type: array
                      items:
                        type: object
                        properties:
                          participant_id:
                            type: integer
                          participant_name:
                            type: string
                    notes:
                      type: array
                      items:
                        type: object
                        properties:
                          note_id:
                            type: integer
                          note_text:
                            type: string
                    messages:
                      type: array
                      items:
                        type: object
                        properties:
                          message_id:
                            type: integer
                          message_text:
                            type: string
        400:
          description: Bad Request
        401:
          description: Unauthorized Access
        404:
          description: Not Found
        500:
          description: Internal Server Error
    post: 
      tags:
        - Events
      summary: Create event
      description: Create a new event.
      parameters:
        - name: event
          in: body
          description: Event object
          required: true
          schema:
            type: object
            properties:
              participants_number:
                type: integer
              category:
                type: string
              description:
                type: string
              image_url:
                type: string
              name:
                type: string
              date:
                type: string
              address:
                type: object
                properties:
                  street:
                    type: string
                  city:
                    type: string
                  country:
                    type: string
                  zip:
                    type: string
              mainCategoryId:
                type: integer
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              code:
                type: integer
              message:
                type: string
              event:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  date:
                    type: string
                  address:
                    type: object
                    properties:
                      street:
                        type: string
                      city:
                        type: string
                      country:
                        type: string
                      zip:
                        type: string
                  mainCategoryId:
                    type: integer
                  participantsNumber:
                    type: integer
                  category:
                    type: string
                  description:
                    type: string
                  imageUrl:
                    type: string
                  organizerId:
                    type: integer       
        400:
          description: Bad Request
        401:
          description: Unauthorized Access
        404:
          description: Not Found
        500:
          description: Internal Server Error
    patch: 
      tags:
        - Events
      summary: Update event
      description: Update an event.
      parameters:
        - name: eventId
          in: path
          description: ID of the event to update.
          required: true
          type: integer
        - name: event
          in: body
          description: Event object
          required: true
          schema:
            type: object
            properties:
              participants_number:
                type: integer
              category:
                type: string
              description:
                type: string
              image_url:
                type: string
              name:
                type: string
              date:
                type: string
              address:
                type: object
                properties:
                  street:
                    type: string
                  city:
                    type: string
                  country:
                    type: string
                  zip:
                    type: string
              mainCategoryId:
                type: integer
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              code:
                type: integer
              message:
                type: string
              event:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  date:
                    type: string
                  address:
                    type: object
                    properties:
                      street:
                        type: string
                      city:
                        type: string
                      country:
                        type: string
                      zip:
                        type: string
                  mainCategoryId:
                    type: integer
                  participantsNumber:
                    type: integer
                  category:
                    type: string
                  description:
                    type: string
                  imageUrl:
                    type: string
                  organizerId:
                    type: integer       
        400:
          description: Bad Request
        401:
          description: Unauthorized Access
        404:
          description: Not Found
        500:
          description: Internal Server Error
    delete:
      tags:
        - Events
      summary: Delete event
      description: Delete an event.
      parameters:
        - name: eventId
          in: path
          description: ID of the event to delete.
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              code:
                type: integer
              message:
                type: string
        400:
          description: Bad Request
        401:
          description: Unauthorized Access
        404:
          description: Not Found
        500:
          description: Internal Server Error
# (POST) /events/:eventId/apply
#router.post("/:eventId/apply", checkAuth, event_apply);
  /events/{eventId}/apply:
    post:
      tags:
        - Events
      summary: Apply to event
      description: Apply to an event.
      parameters:
        - name: eventId
          in: path
          description: ID of the event to apply to.
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              code:
                type: integer
              message:
                type: string
        400:
          description: Bad Request
        401:
          description: Unauthorized Access
        404:
          description: Not Found
        500:
          description: Internal Server Error
  /events/{eventId}/unapply:
    post:
      tags:
        - Events
      summary: Unapply to event
      description: Unapply to an event.
      parameters:
        - name: eventId
          in: path
          description: ID of the event to unapply to.
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              code:
                type: integer
              message:
                type: string
        400:
          description: Bad Request
        401:
          description: Unauthorized Access
        404:
          description: Not Found
        500:
          description: Internal Server Error
  /events/{eventId}/accept/{userId}:
    post:
      tags:
        - Events
      summary: Accept candidate
      description: Accept a candidate to an event.
      parameters:
        - name: eventId
          in: path
          description: ID of the event to accept a candidate to.
          required: true
          type: integer
        - name: userId
          in: path
          description: ID of the user to accept to the event.
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              code:
                type: integer
              message:
                type: string
        400:
          description: Bad Request
        401:
          description: Unauthorized Access
        404:
          description: Not Found
        500:
          description: Internal Server Error

  
  /events/{eventId}/refuse/{userId}:
    post:
      tags:
        - Events
      summary: Refuse candidate
      description: Refuse a candidate to an event.
      parameters:
        - name: eventId
          in: path
          description: ID of the event to refuse a candidate to.
          required: true
          type: integer
        - name: userId
          in: path
          description: ID of the user to refuse to the event.
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              code:
                type: integer
              message:
                type: string
        400:
          description: Bad Request
        401:
          description: Unauthorized Access
        404:
          description: Not Found
        500:
          description: Internal Server Error
  /events/{eventId}/unparticipate:
    post:
      tags:
        - Events
      summary: Unparticipate to event
      description: Unparticipate to an event.
      parameters:
        - name: eventId
          in: path
          description: ID of the event to unparticipate to.
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              code:
                type: integer
              message:
                type: string
        400:
          description: Bad Request
        401:
          description: Unauthorized Access
        404:
          description: Not Found
        500:
          description: Internal Server Error
  /events/{eventId}/remove/{userId}:
    post:
      tags:
        - Events
      summary: Remove participant
      description: Remove a participant from an event.
      parameters:
        - name: eventId
          in: path
          description: ID of the event to remove a participant from.
          required: true
          type: integer
        - name: userId
          in: path
          description: ID of the user to remove from the event.
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              code:
                type: integer
              message:
                type: string
        400:
          description: Bad Request
        401:
          description: Unauthorized Access
        403:
          description: Forbidden
        404:
          description: Not Found
        500:
          description: Internal Server Error

# (GET) /events/search
# filters :
# router.get("/search", event_get_by_filters);
#   event_name: Joi.string().max(40).optional(),
#   description: Joi.string().max(300).optional(),
#   category: Joi.string().max(40).optional(),
#   MainCategoryId: Joi.number().integer().optional(),
  
#     range_date_min: Joi.date().optional(),
#     range_date_max: Joi.date().optional(),
  
#     range_places_min: Joi.number().integer().optional(),
#     range_places_max: Joi.number().integer().optional(),

#     street: Joi.string().optional(),
#     city: Joi.string().optional(),
#     country: Joi.string().optional(),
#     zip: Joi.string().optional(),

#   username: Joi.string().max(30).optional(),
#   nb_places_wanted: Joi.number().integer().optional(),
#   score_host_min: Joi.number().integer().optional(),
  
  /events/search:
    get:
      tags:
        - Events
      summary: Search events
      description: Search events.
      parameters:
        - name: event_name
          in: query
          description: Name of the event to search.
          required: false
          type: string
        - name: description
          in: query
          description: Description of the event to search.
          required: false
          type: string
        - name: category
          in: query
          description: Category of the event to search.
          required: false
          type: string
        - name: MainCategoryId
          in: query
          description: MainCategoryId of the event to search.
          required: false
          type: integer
        - name: range_date_min
          in: query
          description: Minimum date of the event to search.
          required: false
          type: string
        - name: range_date_max
          in: query
          description: Maximum date of the event to search.
          required: false
          type: string
        - name: range_places_min
          in: query
          description: Minimum number of places of the event to search.
          required: false
          type: integer
        - name: range_places_max
          in: query
          description: Maximum number of places of the event to search.
          required: false
          type: integer
        - name: street
          in: query
          description: Street of the event to search.
          required: false
          type: string
        - name: city
          in: query
          description: City of the event to search.
          required: false
          type: string
        - name: country
          in: query
          description: Country of the event to search.
          required: false
          type: string
        - name: zip
          in: query
          description: Zip of the event to search.
          required: false
          type: string
        - name: username
          in: query
          description: Username of the event to search.
          required: false
          type: string
        - name: nb_places_wanted
          in: query
          description: Number of places wanted of the event to search.
          required: false
          type: integer
        - name: score_host_min
          in: query
          description: Minimum score of the host of the event to search.
          required: false
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              code:
                type: integer
              message:
                type: string
              events:
                type: array
                items:
                  type: object
                  properties:
                    event_id:
                      type: integer
                    event_name:
                      type: string
                    organizer:
                      type: object
                      properties:
                        organizer_id:
                          type: integer
                        organizer_name:
                          type: string
                    candidates:
                      type: array
                      items:
                        type: object
                        properties:
                          candidate_id:
                            type: integer
                          candidate_name:
                            type: string
                    participants:
                      type: array
                      items:
                        type: object
                        properties:
                          participant_id:
                            type: integer
                          participant_name:
                            type: string
                    notes:
                      type: array
                      items:
                        type: object
                        properties:
                          note_id:
                            type: integer
                          note_text:
                            type: string
                    messages:
                      type: array
                      items:
                        type: object
                        properties:
                          message_id:
                            type: integer
                          message_text:
                            type: string
        400:
          description: Bad Request
        401:
          description: Unauthorized Access
        500:
          description: Internal Server Error
# router.get("/upcoming", event_get_upcoming);
  /events/upcoming:
    get:
      tags:
        - Events
      summary: Get upcoming events
      description: Get upcoming events.
      parameters:
        - name: limit
          in: query
          description: Limit of upcoming events to retrieve.
          required: false
          type: integer
        - name: offset
          in: query
          description: Offset of upcoming events to retrieve.
          required: false
          type: integer
        - name: include_organizer
          in: query
          description: Include the organizer in the response.
          required: false
          type: boolean
        - name: include_candidates
          in: query
          description: Include the candidates in the response.
          required: false
          type: boolean
        - name: include_participants
          in: query
          description: Include the participants in the response.
          required: false
          type: boolean
        - name: include_notes
          in: query
          description: Include the notes in the response.
          required: false
          type: boolean
        - name: include_messages
          in: query
          description: Include the messages in the response.
          required: false
          type: boolean
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              code:
                type: integer
              message:
                type: string
              events:
                type: array
                items:
                  type: object
                  properties:
                    event_id:
                      type: integer
                    event_name:
                      type: string
                    organizer:
                      type: object
                      properties:
                        organizer_id:
                          type: integer
                        organizer_name:
                          type: string
                    candidates:
                      type: array
                      items:
                        type: object
                        properties:
                          candidate_id:
                            type: integer
                          candidate_name:
                            type: string
                    participants:
                      type: array
                      items:
                        type: object
                        properties:
                          participant_id:
                            type: integer
                          participant_name:
                            type: string
                    notes:
                      type: array
                      items:
                        type: object
                        properties:
                          note_id:
                            type: integer
                          note_text:
                            type: string
                    messages:
                      type: array
                      items:
                        type: object
                        properties:
                          message_id:
                            type : integer
                          message_text: 
                            type: string
        400:
          description: Bad Request
        401:
          description: Unauthorized Access
        500:
          description: Internal Server Error
  /events/event_relationship:
    get:
      tags:
        - Events
      summary: Get event relationship
      description: Get event relationship.
      parameters:
        - name: eventId
          in: query
          description: ID of the event to retrieve the relationship.
          required: true
          type: integer
        - name: userId
          in: query
          description: ID of the user to retrieve the relationship.
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              relationship:
                type: string
        400:
          description: Bad Request
        401:
          description: Unauthorized Access
        500:
          description: Internal Server Error
  /users/signup:
    post:
      tags:
        - Users
      summary: Signup
      description: Signup.
      parameters:
        - name: user
          in: body
          description: User object
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
              password:
                type: string
              bio:
                type: string
              email:
                type: string
              picture:
                type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              token:
                type: string
              userId:
                type: integer
              username:
                type: string
              bio:
                type: string
              email:
                type: string
              picture:
                type: string
              score:
                type: integer
              createdAt:
                type: string
              updatedAt:
                type: string
        400:
          description: Bad Request
        409:
          description: Conflict
        500:
          description: Internal Server Error
  /users/login:
    post:
      tags:
        - Users
      summary: Login
      description: Login.
      parameters:
        - name: user
          in: body
          description: User object
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
              password:
                type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              token:
                type: string
              userId:
                type: integer
              username:
                type: string
              bio:
                type: string
              email:
                type: string
              picture:
                type: string
              score:
                type: integer
              createdAt:
                type: string
              updatedAt:
                type: string
        400:
          description: Bad Request
        401:
          description: Unauthorized Access
        404:
          description: Not Found
        500:
          description: Internal Server Error
  /users:
    get:
      tags:
        - Users
      summary: Get users
      description: Get user all users or a user with related events.
      parameters:
        - name: id
          in: query
          description: ID of the user to retrieve.
          required: false
          type: integer
        - name: include_organizedEvents
          in: query
          description: Include the organized events in the response.
          required: false
          type: boolean
        - name: include_candidateEvents
          in: query
          description: Include the candidate events in the response.
          required: false
          type: boolean
        - name: include_participantEvents
          in: query
          description: Include the participant events in the response.
          required: false
          type: boolean
        - name: include_givenNotes
          in: query
          description: Include the given notes in the response.
          required: false
          type: boolean
        - name: include_receivedNotes
          in: query
          description: Include the received notes in the response.
          required: false
          type: boolean
        - name: include_messages
          in: query
          description: Include the messages in the response.
          required: false
          type: boolean
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              users:
                type: array
                items:
                  type: object
                  properties:
                    user_id:
                      type: integer
                    user_name:
                      type: string
                    organized_events:
                      type: array
                      items:
                        type: object
                        properties:
                          event_id:
                            type: integer
                          event_name:
                            type: string
                    candidate_events:
                      type: array
                      items:
                        type: object
                        properties:
                          event_id:
                            type: integer
                          event_name:
                            type: string
                    participant_events:
                      type: array
                      items:
                        type: object
                        properties:
                          event_id:
                            type: integer
                          event_name:
                            type: string
                    given_notes:
                      type: array
                      items:
                        type: object
                        properties:
                          note_id:
                            type: integer
                          note_text:
                            type: string
                    received_notes:
                      type: array
                      items:
                        type: object
                        properties:
                          note_id:
                            type:
                              integer
                          note_text:
                            type: string
                    messages:
                      type: array
                      items:
                        type: object
                        properties:
                          message_id:
                            type: integer
                          message_text:
                            type: string
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /users/:id:
    patch:
      tags:
        - Users
      summary: Update user
      description: Update a user.
      parameters:
        - name: id
          in: path
          description: ID of the user to update.
          required: true
          type: integer
        - name: user
          in: body
          description: User object
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
              password:
                type: string
              bio:
                type: string
              email:
                type: string
              picture:
                type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              user:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  bio:
                    type: string
                  email:
                    type: string
                  picture:
                    type: string
                  score:
                    type: integer
                  createdAt:
                    type: string
                  updatedAt:
                    type: string
        400:
          description: Bad Request
        401:
          description: Unauthorized Access
        409:
          description: Conflict
        500:
          description: Internal Server Error
  /user/:id:
    delete:
      tags:
        - Users
      summary: Delete user
      description: Delete a user.
      parameters:
        - name: id
          in: path
          description: ID of the user to delete.
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              user:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  bio:
                    type: string
                  email:
                    type: string
                  picture:
                    type: string
                  score:
                    type: integer
                  createdAt:
                    type: string
                  updatedAt:
                    type: string
        400:
          description: Bad Request
        401:
          description: Unauthorized Access
        409:
          description: Conflict
        500:
          description: Internal Server Error
    
# (POST) /notes/addnotefromhost
# router.post("/addnotefromhost", checkAuth, post_note_from_host);
# {
#     ownerId: Joi.number().required(),
#     eventId: Joi.number().required(),
#     targetId: Joi.number().required(),
#     value: Joi.number().required(),
#     title: Joi.string().min(0) ,
#     comment: Joi.string().min(0),
# }

  /notes/addnotefromhost:
    post:
      tags:
        - Notes
      summary: Add note from host
      description: Add a note from host.
      parameters:
        - name: note
          in: body
          description: Note object
          required: true
          schema:
            type: object
            properties:
              ownerId:
                type: integer
              eventId:
                type: integer
              targetId:
                type: integer
              value:
                type: integer
              title:
                type: string
              comment:
                type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              note:
                type: object
                properties:
                  id:
                    type: integer
                  ownerId:
                    type: integer
                  eventId:
                    type: integer
                  targetId:
                    type: integer
                  value:
                    type: integer
                  title:
                    type: string
                  comment:
                    type: string
                  createdAt:
                    type: string
                  updatedAt:
                    type: string
        400:
          description: Bad Request
        401:
          description: Unauthorized Access
        409:
          description: Conflict
        500:
          description: Internal Server Error
  /notes/addnotefromparticipant:
    post:
      tags:
        - Notes
      summary: Add note from participant
      description: Add a note from participant.
      parameters:
        - name: note
          in: body
          description: Note object
          required: true
          schema:
            type: object
            properties:
              ownerId:
                type: integer
              eventId:
                type: integer
              targetId:
                type: integer
              value:
                type: integer
              title:
                type: string
              comment:
                type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              note:
                type: object
                properties:
                  id:
                    type: integer
                  ownerId:
                    type: integer
                  eventId:
                    type: integer
                  targetId:
                    type: integer
                  value:
                    type: integer
                  title:
                    type: string
                  comment:
                    type: string
                  createdAt:
                    type: string
                  updatedAt:
                    type: string
        400:
          description: Bad Request
        401:
          description: Unauthorized Access
        409:
          description: Conflict
        500:
          description: Internal Server Error
# (GET) /categories
#router.get("/", get_main_categories);          
  /categories:
    get:
      tags:
        - Categories
      summary: Get main categories
      description: Get main categories.
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              categories:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
                    createdAt:
                      type: string
                    updatedAt:
                      type: string
        500:
          description: Internal Server Error
  /messages/:eventId:
    get:
      tags:
        - Messages
      summary: Get all messages from event
      description: Get all messages from event.
      parameters:
        - name: eventId
          in: path
          description: ID of the event to retrieve the messages from.
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              messages:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    text:
                      type: string
                    createdAt:
                      type: string
                    updatedAt:
                      type: string
        500:
          description: Internal Server Error

#router.post("/", add_messages_to_event);

  /messages:
    post:
      tags:
        - Messages
      summary: Add messages to event
      description: Add messages to event.
      parameters:
        - name: message
          in: body
          description: Message object
          required: true
          schema:
            type: object
            properties:
              eventId:
                type: integer
              text:
                type: string
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              message:
                type: object
                properties:
                  id:
                    type: integer
                  text:
                    type: string
                  createdAt:
                    type: string
                  updatedAt:
                    type: string
        500:
          description: Internal Server Error
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /MAXIMEGUILIANI_2/Social_network_API/1.0.0